/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this ListHostKeys.
func (mg *ListHostKeys) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ListHostKeys.
func (mg *ListHostKeys) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this ListHostKeys.
func (mg *ListHostKeys) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this ListHostKeys.
func (mg *ListHostKeys) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ListHostKeys.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ListHostKeys) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this ListHostKeys.
func (mg *ListHostKeys) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this ListHostKeys.
func (mg *ListHostKeys) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ListHostKeys.
func (mg *ListHostKeys) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ListHostKeys.
func (mg *ListHostKeys) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this ListHostKeys.
func (mg *ListHostKeys) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this ListHostKeys.
func (mg *ListHostKeys) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ListHostKeys.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ListHostKeys) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this ListHostKeys.
func (mg *ListHostKeys) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this ListHostKeys.
func (mg *ListHostKeys) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ListPublishingProfileXMLWithSecrets.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ListPublishingProfileXMLWithSecrets) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetPublishConnectionDetailsTo of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ListPublishingProfileXMLWithSecrets.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ListPublishingProfileXMLWithSecrets) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetPublishConnectionDetailsTo of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this ListPublishingProfileXMLWithSecrets.
func (mg *ListPublishingProfileXMLWithSecrets) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
